

# Use a polylith setup, which creates a deployment for every component.
# If false, a monolithic deployment will be created, with a single deployment.
polylith: true
# Docker image to use
image:
  name: "matrixdotorg/dendrite-polylith:latest"
  pullPolicy: Always

configuration:
  # config version
  version: 2

  # servername for this dendrite deployment
  servername: ""

  # The server name to delegate server-server communications to, with optional port
  # e.g. localhost:443
  well_known_server_name: ""

  # Lists of domains that the server will trust as identity servers to verify third
  # party identifiers such as phone numbers and email addresses.
  trusted_third_party_id_servers:
    - matrix.org
    - vector.im

  # Disables federation. Dendrite will not be able to make any outbound HTTP requests
  # to other servers and the federation API will not be exposed.
  disable_federation: false

  # signing key to use
  signing_key:
    # Create a new signing key, if not exists
    create: true
    # Use an existing secret
    existingSecret: ""
    
  key_validity_period: 168h0m0s

  # database connection settings
  database:
    host:  ""
    user:  ""
    password: ""

    max_open_conns: 100
    max_idle_conns: 2
    conn_max_lifetime: -1

  # prometheus metrics
  metrics:
    # Whether or not Prometheus metrics are enabled.
    enabled: false
    # HTTP basic authentication to protect access to monitoring.
    basic_auth:
      user: "metrics"
      password: metrics

  # NATS connection settings
  jetstream:
    # The prefix to use for NATS topic names for this homeserver. Change this only if
    # you are running more than one Dendrite homeserver on the same NATS deployment.
    topic_prefix: "Dendrite"
    # Keep all storage in memory. This is mostly useful for unit tests.
    in_memory: false
    # Persistent directory to store JetStream streams in. (only relevant if not using external NATS)
    storage_path: "./"
    # List of NATS addresses to connect to. If empty, an in-process NATS server is used.
    addresses:
      #- nats://nats-cluster.nats.svc.cluster.local:4222

  # TURN server information that this homeserver should send to clients.
  turn:
    turn_user_lifetime: ""
    turn_uris: []
    turn_shared_secret: ""
    turn_username: ""
    turn_password: ""
  
  # Settings for rate-limited endpoints. Rate limiting will kick in after the
  # threshold number of "slots" have been taken by requests from a specific
  # host. Each "slot" will be released after the cooloff time in milliseconds.
  rate_limiting:
    enabled: true
    threshold: 5
    cooloff_ms: 500

  # outbound proxy settings for federation api
  outbound_proxy:
    enabled: false
    protocol: http
    host: localhost
    port: 8080

  dns_cache:
    # Whether or not the DNS cache is enabled.
    enabled: false
    # Maximum number of entries to hold in the DNS cache, and
    # for how long those items should be considered valid in seconds.
    cache_size: 256
    cache_lifetime: "10m"

  logging:
  - type: file
    level: "error"
    params:
      path: /var/log/dendrite

  tracing:
    enabled: false
    jaeger:
      serviceName: ""
      disabled: false
      rpc_metrics: false
      tags: []
      sampler: null
      reporter: null
      headers: null
      baggage_restrictions: null
      throttler: null

  profiling:
    enabled: false
    port: 65432

  # Configuration for experimental MSC's
  mscs:
    # A list of enabled MSC's
    # Currently valid values are:
    # - msc2836    (Threading, see https://github.com/matrix-org/matrix-doc/pull/2836)
    # - msc2946    (Spaces Summary, see https://github.com/matrix-org/matrix-doc/pull/2946)

# default resource requests/limits
# This can be set individually for each component, see mediaapi below
resources:
  requests:
    cpu: "80m"
    memory: "64Mi"

  limits:
    cpu: "240m"
    memory: "256Mi"

persistence:
  storageClass: local-path
  logs:
    existingClaim: ""
    capacity: "10Gi"
  media:
    existingClaim: ""
    capacity: "10Gi"



# Components to deploy
# listen_int is the port for the internal api connection
# listen_ext is the port to use for external requests
# connect defines the dns and port (should be the same as listen_int) for other services to use for connections
components:
  appservice:
    listen_int: 7777
    connect: appservice:7777

  clientapi:
    listen_int: 7771
    listen_ext: 8071
    connect: clientapi:7771

    # configuration about 
    registration:
      # disable registration
      disabled: true

      # If set, allows registration by anyone who knows the shared secret, regardless of
      # whether registration is otherwise disabled.
      shared_secret: ""

      enable_registration_captcha: false
      # Settings for ReCAPTCHA.
      recaptcha_public_key: ""
      recaptcha_private_key: ""
      recaptcha_bypass_secret: ""
      recaptcha_siteverify_api: ""

  eduserver:
    listen_int: 7778
    connect: eduserver:7778

  federationapi:
    listen_int: 7772
    listen_ext: 8072
    connect: federationapi:7772
    send_max_retries: 16
    disable_tls_validation: false
    prefer_direct_fetch: false

  keyserver:
    listen_int: 7779
    connect: keyserver:7779

  mediaapi:
    listen_int: 7774
    listen_ext: 8074
    connect: mediaapi:7774
    max_file_size_bytes: "10485760"
    # Whether to dynamically generate thumbnails if needed.
    dynamic_thumbnails: false
    # The maximum number of simultaneous thumbnail generators to run.
    max_thumbnail_generators: 10
    # A list of thumbnail sizes to be generated for media content.
    thumbnail_sizes:
    - width: 32
      height: 32
      method: crop
    - width: 96
      height: 96
      method: crop
    - width: 640
      height: 480
      method: scale
    #resources:
    #  requests:
    #    cpu: "160m"
    #    memory: "128Mi"
    #  limits:
    #    cpu: "480m"
    #    memory: "512Mi"

  roomserver:
    listen_int: 7770
    connect: roomserver:7770

  syncapi:
    listen_int: 7773
    listen_ext: 8073
    connect: syncapi:7773
    # This option controls which HTTP header to inspect to find the real remote IP
    # address of the client. This is likely required if Dendrite is running behind
    # a reverse proxy server.
    real_ip_header: X-Real-IP

  userapi:
    listen_int: 7781
    connect: userapi:7781

nats:
  enabled: false

  nats:
    jetstream:
      enabled: true

postgresql:
  enabled: false
  global:
    storageClass: ""
    postgresql:
      postgresqlDatabase: ""
      postgresqlUsername: ""
      existingSecret: ""
      postgresqlPassword: ""
      servicePort: ""
      replicationPassword: ""

  initdbScripts:
    create_db.sh: |
      #!/bin/sh
      for db in userapi_accounts userapi_devices mediaapi syncapi roomserver keyserver federationapi appservice mscs; do
          createdb -U dendrite -O dendrite dendrite_$db
      done

  persistence:
    enabled: false

ingress:
  enabled: false
  
  annotations: {}
  hosts: []
  tls: []
